{
  "defectsList" : [ {
    "title" : "Product defects",
    "status" : "FAILED",
    "defects" : [ {
      "uid" : "2e65361c6886c55e",
      "failure" : {
        "message" : "AssertionError: assert [176:name1:he...f:footer, ...] == [176:name1:hea...f:footer, ...]\n  Left contains more items, first extra item: None:name5.R TNQQ:header,( uP7-+p,i]:footerss[st=aJO\\\n  Use -v to get the full diff",
        "stackTrace" : "app = <fixture.application.Application object at 0x03822050>\ndb = <fixture.db.DbFixture object at 0x037F4CB0>\njson_groups = None:name5.R TNQQ:header,( uP7-+p,i]:footerss[st=aJO\\\ncheck_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        old_groups = db.get_group_list()\n        app.group.create(group)\n    #    assert len(old_groups) + 1 == app.group.count()\n        new_groups = db.get_group_list()\n        old_groups.append(group)\n>       assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE       assert [176:name1:he...f:footer, ...] == [176:name1:hea...f:footer, ...]\nE         Left contains more items, first extra item: None:name5.R TNQQ:header,( uP7-+p,i]:footerss[st=aJO\\\nE         Use -v to get the full diff\n\ntest\\test_add_group.py:13: AssertionError"
      },
      "testCases" : [ {
        "uid" : "d76fe612b0e2ba43",
        "name" : "test_add_group[None:name5.R TNQQ:header,( uP7-+p,i]:footerss[st=aJO\\\\]",
        "title" : "Test add group [None:name5.R TNQQ:header,( uP7-+p,i]:footerss[st=aJO\\\\]",
        "time" : {
          "start" : 1532507807445,
          "stop" : 1532507808646,
          "duration" : 1201
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      } ]
    } ]
  }, {
    "title" : "Test defects",
    "status" : "BROKEN",
    "defects" : [ ]
  } ]
}